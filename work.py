import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ChatPermissions
from aiogram.filters import Command
import asyncio

# –û—Ç—Ä–∏–º—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
API_TOKEN = os.getenv('API_TOKEN', '7739860939:AAFvk9wdbdpCJ5L17WSb7YkaORGU09LTsDE')
CHANNEL_ID = os.getenv('CHANNEL_ID', '@shifuweb3')

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    try:
        await message.answer(".".format(CHANNEL_ID))
        logger.info(f"/start –≤—ñ–¥ {message.from_user.id}")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ —É start handler: {e}")

MAIN_THREAD_ID = 2  # ID –≥–æ–ª–æ–≤–Ω–æ—ó –≥—ñ–ª–∫–∏

@dp.message()
async def check_subscription(message: types.Message):
    logger.info(f"message_thread_id: {message.message_thread_id}")
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ —Ü–µ –≥—Ä—É–ø–æ–≤–∏–π —á–∞—Ç
    if message.chat.type not in ["group", "supergroup"]:
        return
    user_id = message.from_user.id
    chat_id = message.chat.id
    try:
        member = await bot.get_chat_member(CHANNEL_ID, user_id)
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} —Å—Ç–∞—Ç—É—Å —É –∫–∞–Ω–∞–ª—ñ {CHANNEL_ID}: {member.status}")
        if member.status in ['member', 'administrator', 'creator']:
            return  # –ü—ñ–¥–ø–∏—Å–∞–Ω–∏–π ‚Äî –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ
        else:
            await message.delete()
            await asyncio.sleep(0.5)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å username
            username = message.from_user.username
            user_mention = f"@{username}" if username else f"–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id}"
            
            await bot.send_message(
                chat_id=chat_id,
                text=f"üîí {user_mention} —á—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_ID}"
            )
            await bot.restrict_chat_member(
                chat_id=chat_id,
                user_id=user_id,
                permissions=ChatPermissions(can_send_messages=False)
            )
            logger.info(f"–û–±–º–µ–∂–µ–Ω–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} —É —á–∞—Ç—ñ {chat_id}")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –ø—ñ–¥–ø–∏—Å–∫–∏ –∞–±–æ –æ–±—Ä–æ–±—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")

if __name__ == '__main__':
    async def main():
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ")
        await dp.start_polling(bot)
    asyncio.run(main())
