import logging
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ChatPermissions
from aiogram.filters import Command
import asyncio

# –û—Ç—Ä–∏–º—É—î–º–æ –∑–º—ñ–Ω–Ω—ñ —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ –∞–±–æ –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∑–Ω–∞—á–µ–Ω–Ω—è –∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º
API_TOKEN = os.getenv('API_TOKEN', '7739860939:AAFvk9wdbdpCJ5L17WSb7YkaORGU09LTsDE')
CHANNEL_ID = os.getenv('CHANNEL_ID', '@shifuweb3')

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')
logger = logging.getLogger(__name__)

bot = Bot(token=API_TOKEN)
dp = Dispatcher()

@dp.message(Command('start'))
async def cmd_start(message: types.Message):
    try:
        await message.answer("–ü—Ä–∏–≤—ñ—Ç! –Ø –±–æ—Ç-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä. –©–æ–± –ø–∏—Å–∞—Ç–∏ –≤ —Ü—å–æ–º—É —á–∞—Ç—ñ, –ø—ñ–¥–ø–∏—à—ñ—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª {}".format(CHANNEL_ID))
        logger.info(f"/start –≤—ñ–¥ {message.from_user.id}")
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ —É start handler: {e}")

@dp.message()
async def check_subscription(message: types.Message):
    # –õ–æ–≥—É—î–º–æ –í–°–Ü –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è
    logger.info(f"–û—Ç—Ä–∏–º–∞–Ω–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: –≤—ñ–¥ {message.from_user.id} —É —á–∞—Ç—ñ {message.chat.id} —Ç–∏–ø—É {message.chat.type}")
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —â–æ —Ü–µ –≥—Ä—É–ø–æ–≤–∏–π —á–∞—Ç
    if message.chat.type not in ["group", "supergroup"]:
        logger.info(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –Ω–µ –≤ –≥—Ä—É–ø—ñ: {message.chat.type}")
        return
    
    user_id = message.from_user.id
    chat_id = message.chat.id
    logger.info(f"–û–±—Ä–æ–±–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {user_id} —É —á–∞—Ç—ñ {chat_id}")
    
    try:
        logger.info(f"–ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø—ñ–¥–ø–∏—Å–∫—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_ID}")
        member = await bot.get_chat_member(CHANNEL_ID, user_id)
        logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} —Å—Ç–∞—Ç—É—Å —É –∫–∞–Ω–∞–ª—ñ {CHANNEL_ID}: {member.status}")
        
        if member.status in ['member', 'administrator', 'creator']:
            logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–π, –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ")
            return  # –ü—ñ–¥–ø–∏—Å–∞–Ω–∏–π ‚Äî –Ω—ñ—á–æ–≥–æ –Ω–µ —Ä–æ–±–∏–º–æ
        else:
            logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id} –ù–ï –ø—ñ–¥–ø–∏—Å–∞–Ω–∏–π, –≤–∏–¥–∞–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è")
            await message.delete()
            logger.info(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤—ñ–¥ {user_id} –≤–∏–¥–∞–ª–µ–Ω–æ")
            
            await asyncio.sleep(0.5)
            
            # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å username
            username = message.from_user.username
            user_mention = f"@{username}" if username else f"–∫–æ—Ä–∏—Å—Ç—É–≤–∞—á {user_id}"
            
            logger.info(f"–ù–∞–¥—Å–∏–ª–∞—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø—ñ–¥–ø–∏—Å–∫—É –¥–ª—è {user_mention}")
            await bot.send_message(
                chat_id=chat_id,
                text=f"üîí {user_mention} —á—Ç–æ–±—ã –ø–∏—Å–∞—Ç—å –≤ —ç—Ç–æ–º —á–∞—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª {CHANNEL_ID}"
            )
            logger.info(f"–ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø—ñ–¥–ø–∏—Å–∫—É –Ω–∞–¥—ñ—Å–ª–∞–Ω–æ")
            
            logger.info(f"–û–±–º–µ–∂—É—î–º–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id}")
            await bot.restrict_chat_member(
                chat_id=chat_id,
                user_id=user_id,
                permissions=ChatPermissions(can_send_messages=False)
            )
            logger.info(f"–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ {user_id} –æ–±–º–µ–∂–µ–Ω–æ —É —á–∞—Ç—ñ {chat_id}")
            
    except Exception as e:
        logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤—ñ—Ä—Ü—ñ –ø—ñ–¥–ø–∏—Å–∫–∏ –∞–±–æ –æ–±—Ä–æ–±—Ü—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è: {e}")
        logger.error(f"–î–µ—Ç–∞–ª—ñ –ø–æ–º–∏–ª–∫–∏: {type(e).__name__}: {str(e)}")

if __name__ == '__main__':
    async def main():
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω–æ")
        try:
            # –°–ø—Ä–æ–±—É—î–º–æ polling
            logger.info("–ó–∞–ø—É—Å–∫–∞—î–º–æ polling...")
            await dp.start_polling(bot)
        except Exception as e:
            logger.error(f"–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ polling: {e}")
            logger.info("–°–ø—Ä–æ–±—É—î–º–æ webhook...")
            # –Ø–∫—â–æ polling –Ω–µ –ø—Ä–∞—Ü—é—î, —Å–ø—Ä–æ–±—É—î–º–æ webhook
            await dp.start_polling(bot, skip_updates=True)
    asyncio.run(main())
